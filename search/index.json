[{"content":"前置条件 Github 账号 CloudFlare 账号 Telegram 账号 Github 和 TG 都需要科学上网。\n--- markmap: zoom: false pan: false height: 300px backgroundColor: \u0026#34;#f8f8f8\u0026#34; --- # 前置条件： # github 设置 ## fork 仓库 ## 获取 Telegram 所需参数 ### 获得 `TG_BOT_TOKEN` ### 获取 `TG_CHAT_ID` # cloudflare 设置： ## Creat Page ## 选择刚刚 fork 的仓库 ## 设置 kv ## 绑定 kv ## 添加变量 ## RE 部署 ## 结束 github 设置 fork 仓库 进入 GitHub 项目主页：点击跳转，点击 fork\n不用设置，直接点击 create fork，到此 GitHub 的步骤就完毕可以不用管了。\n获取 Telegram 所需参数 获得 TG_BOT_TOKEN 向 @BotFather 发送 /newbot，按照提示输入 bot 的备注、用户名等信息。成功创建后获得 TG_BOT_TOKEN。\n获取 TG_CHAT_ID 创建一个新的频道（Channel），进入新建的频道，选择频道管理，将刚才创建的机器人设为频道管理员。 向 @VersaToolsBot 转发 一条第 2 步新建频道中的消息，获取 TG_CHAT_ID（频道 ID） cloudflare 设置 Creat Page 打开 cloudflare，点击左边的 work\u0026amp;page，接着点击 creat：\n选择刚刚 fork 的仓库 点击 setup，下一个页面不需要设置，直接点击下一步直至部署完成。\n设置 kv namespacename 填写: img_url，点击 add：\n绑定 kv 回到 workpage，点击自己项目进去 setting，找到下图的位置，添加 img_url，绑定到刚才添加的 kv：\n添加变量 AUTH_CODE = 进入图床的验证码 BASIC_PASS = 后台管理密码 BASIC_USER = 后台管理用户名 TG_BOT_TOKEN = 刚才让记下的添加的机器人的 api TG_CHAT_ID = tg 返回的频道信息里的频道 id\nRE 部署 再重新部署一遍，就能使用了：\n网址是 cf 给你的地址：\n也可以绑定自己的域名：\n结束 至此大功告成，输入域名就能访问了：\n","date":"2025-04-24T20:21:04+08:00","image":"https://zxsos.pages.dev/file/pic/1745778231300_20250428022341908.png","permalink":"https://zxsos.github.io/p/telegram%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/","title":"Telegram图床搭建"},{"content":"修改仓库所有者和修改 commit 信息 ( 不会更改时间线 )\n1 git filter-branch -f --env-filter \u0026#39; GIT_AUTHOR_NAME=\u0026#34;zxsos\u0026#34; GIT_AUTHOR_EMAIL=\u0026#34;my@domain\u0026#34; GIT_COMMITTER_NAME=\u0026#34;zxsos\u0026#34; GIT_COMMITTER_EMAIL=\u0026#34;my@domain \u0026#39; --tag-name-filter cat -- --branches --tags ! 可能提示不安全被废弃\n更好的解决方案（bushi） 虽然可以继续用 filter-branch，但我强烈建议改用更安全的 git filter-repo：\n先安装（如果尚未安装）：\n1 pip install git-filter-repo 执行更安全的修改：\n1 git filter-repo --name-callback \u0026#34;return b\u0026#39;xxxx\u0026#39;\u0026#34; --email-callback \u0026#34;return b\u0026#39;xxx@email.com\u0026#39;\u0026#34; --force ","date":"2025-04-24T16:24:53+08:00","image":"https://zxsos.pages.dev/file/pic/1745778090506_20250428022125434.png","permalink":"https://zxsos.github.io/p/git%E4%BF%AE%E6%94%B9/","title":"Git修改"},{"content":"1panel + gitea + docker + cloudflare + 反代 教程 准备 服务器\nCloudflare 账号\n域名\n--- markmap: zoom: false pan: false height: 300px backgroundColor: \u0026#34;#f8f8f8\u0026#34; --- # **1panel \u0026#43; gitea \u0026#43; docker \u0026#43; cloudflare \u0026#43; 反代 教程** ## 准备 ## **SSH 连接到服务器, 安装 1panel** ### **RedHat/CentOS** ### **Ubuntu** ### **Debian** ### **openEuler/ 其他系统** #### 安装 docker #### 安装 1Panel ## **浏览器进入 1panel 中, 找到商店管理** ### **安装 Mysql** ### **Gitea 安装与 SSH 配置** #### **安装 Gitea** #### **修改 SSH 配置文件** ##### 使用编辑器打开配置文件： ##### 找到并修改端口参数, 取消注释 ##### 重启 SSH 服务 ### **Gitea 配置** #### 确认信息 #### 开启电子邮件通知 #### 创建管理员账号 ## **打开** [**Cloudflare**](https://www.cloudflare-cn.com/) ### 添加域 #### 修改 DNS #### SSL 证书 #### 导入证书 #### 反向代理 #### 开启 HTTPS ## 测试一下 ### 添加公钥 ### 本地命令行输入 SSH 连接到服务器, 安装 1panel RedHat/CentOS 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; sh quick_start.sh Ubuntu 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; sudo bash quick_start.sh Debian 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; bash quick_start.sh openEuler/ 其他系统 安装 docker 1 curl -sSL https://linuxmirrors.cn/docker.sh 安装 1Panel 1 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026amp;\u0026amp; sh quick_start.sh 浏览器进入 1panel 中, 找到商店管理 安装 Mysql 版本 5.7+ 不要打开外部访问\nGitea 安装与 SSH 配置 安装 Gitea 打开外部端口访问, 域名可访问后记得关上 SSH 端口建议： 推荐使用默认端口 22，若选择其他端口（如 222 ），后续 Git 操作需使用格式： git@XX:222 若可接受此格式可跳过修改 SSH 部分 修改 SSH 配置文件 使用编辑器打开配置文件 1 sudo vi /etc/ssh/sshd_config 或者在 1panel 系统 \u0026gt; 文件中打开(建议)\n找到并修改端口参数, 取消注释 # Port 22 改为 Port 2223\nvim 操作说明： 按 i 进入编辑模式 删除 # 取消注释 修改端口号后，按 ESC → 输入 :wq 保存退出 重启 SSH 服务 1 sudo systemctl restart sshd Gitea 配置 跳过端口修改 默认是 ip:3000 以下部分可以不用修改 确认信息 开启电子邮件通知 这部分可参考 知乎-如何开启 QQ SMTP 可使用第三方 Email Sending Service 创建管理员账号 打开 Cloudflare 如果域名商有免费 SSL 证书, 那就用 , 跳过这步, 主要是泛域名太贵, cf 可以免费, 如果你只搭建 Gitea 那么推荐到原服务商获取证书, 或者在 1panel 获取 SSl 证书\n添加域 修改 DNS 按提示修改服务商 默认 DNS 为 CF 的 DNS 解析域名, 由于 SSH 的局限性不使用代理, 打开代理后 SSH 连接到的是代理主机 SSL 证书 创建证书 -\u0026gt; 下载证书 修改加密为完全(严格) 导入证书 拿到证书后回到 1panel 点击 网站-\u0026gt; 证书-\u0026gt; 上传证书 填写信息或导入 反向代理 然后点击 网站 -\u0026gt; 创建 , 选择反向代理 开启 HTTPS 确定后点击网站 配置 开启 HTTPS 关闭 Gitea 外部端口访问, 只允许域名访问\n到此结束 可以通过域名正常访问了, 也可以通过 SSH 拉取推送\n测试一下 添加公钥 本地命令行输入 1 SSH -T git@域名 如果出现以下返回就没问题了 Hi there, XXXX! You've successfully authenticated with the key named Gitea, but Gitea does not provide shell access.\n","date":"2025-04-24T15:55:12+08:00","image":"https://zxsos.pages.dev/file/pic/1745777619131_20250428021330748.png","permalink":"https://zxsos.github.io/p/set-up-gitea/","title":"搭建Gitea"}]